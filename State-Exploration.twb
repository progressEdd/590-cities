<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='result' inline='true' name='federated.0jb60kj0b480uh17nmgml09yjob6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='result' name='textscan.12d1qec09446v1187sw1k13987do'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/etang7/Documents/590-cities/result.csv' dataRefreshTime='' directory='C:/Users/etang7/Documents/590-cities' filename='C:/Users/etang7/AppData/Local/Temp/TableauTemp/0rwiy4i0k1m872115efug0zdxvg1/result.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12d1qec09446v1187sw1k13987do' name='result.csv' table='[result#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:K111:no:A1:K111:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Cost of Living Index' ordinal='3' />
            <column datatype='real' name='Rent Index' ordinal='4' />
            <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='5' />
            <column datatype='real' name='Groceries Index' ordinal='6' />
            <column datatype='real' name='Restaurant Price Index' ordinal='7' />
            <column datatype='real' name='Local Purchasing Power Index' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12d1qec09446v1187sw1k13987do' name='result.csv' table='[result#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:K111:no:A1:K111:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Cost of Living Index' ordinal='3' />
            <column datatype='real' name='Rent Index' ordinal='4' />
            <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='5' />
            <column datatype='real' name='Groceries Index' ordinal='6' />
            <column datatype='real' name='Restaurant Price Index' ordinal='7' />
            <column datatype='real' name='Local Purchasing Power Index' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[result.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K111:no:A1:K111:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>880</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Index]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Cost of Living Index</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent Index]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Rent Index</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Plus Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Plus Rent Index]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Cost of Living Plus Rent Index</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Groceries Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Groceries Index]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Groceries Index</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant Price Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Restaurant Price Index]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Restaurant Price Index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Purchasing Power Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Purchasing Power Index]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Local Purchasing Power Index</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[result.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='result.csv' datatype='table' name='[__tableau_internal_object_id__].[result.csv_4D2F7406BCB24DD1B8287691D6A198D1]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='result.csv' id='result.csv_4D2F7406BCB24DD1B8287691D6A198D1'>
            <properties context=''>
              <relation connection='textscan.12d1qec09446v1187sw1k13987do' name='result.csv' table='[result#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:K111:no:A1:K111:1' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Rank' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='real' name='Cost of Living Index' ordinal='3' />
                  <column datatype='real' name='Rent Index' ordinal='4' />
                  <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='5' />
                  <column datatype='real' name='Groceries Index' ordinal='6' />
                  <column datatype='real' name='Restaurant Price Index' ordinal='7' />
                  <column datatype='real' name='Local Purchasing Power Index' ordinal='8' />
                  <column datatype='string' name='Country' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cost of LIving Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Boston&quot;</bucket>
              <bucket>&quot;Los Angeles&quot;</bucket>
              <bucket>&quot;Chicago&quot;</bucket>
              <bucket>&quot;Austin&quot;</bucket>
              <bucket>&quot;Dallas&quot;</bucket>
              <bucket>&quot;Houston&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]</cols>
      </table>
      <simple-id uuid='{30D9F66E-B97A-4AA5-815D-83288CD36172}' />
    </worksheet>
    <worksheet name='Rent Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]</cols>
      </table>
      <simple-id uuid='{B956DAD7-362B-443E-86A5-B308CFD38449}' />
    </worksheet>
    <worksheet name='Resturant Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Austin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Boston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Chicago&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Dallas&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;New York&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Boston&quot;</bucket>
              <bucket>&quot;Los Angeles&quot;</bucket>
              <bucket>&quot;Chicago&quot;</bucket>
              <bucket>&quot;Austin&quot;</bucket>
              <bucket>&quot;Houston&quot;</bucket>
              <bucket>&quot;Dallas&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]</cols>
      </table>
      <simple-id uuid='{B7F4B776-51E4-4E77-B9A3-348255381D20}' />
    </worksheet>
    <worksheet name='United States Cities Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rank:qk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:Country:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:State:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[Latitude (generated)]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6FCFEC06-7D17-4DCA-9928-922305FB4685}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='United States Cities Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3450AA80-037F-401C-86BA-2F99DE46185A}' />
    </window>
    <window class='worksheet' name='Cost of LIving Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F153284D-C202-430D-9BCF-BD0241A97FA4}' />
    </window>
    <window class='worksheet' name='Rent Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F7D7E1B-B795-4FC3-B973-C361C20057D6}' />
    </window>
    <window class='worksheet' maximized='true' name='Resturant Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3019034-FDD7-4FB9-9AB4-F86F90240638}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cost of LIving Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rent Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Resturant Index' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcXElEQVR4nO3deYwc14Hf8W9V9X3NdE/33Ac5B2c4HHJ4U6RIUZQoUWtK8imfMNbJJvkj
      SBbBAkGAYDcJsEGCAAESZLFAFjG89nodb7xre2Vasi2Kh3iI9zkn577PnumZ7um7jvwxpCzr
      sOwROUfV+wCCMDNd1a+a9av36vV79STDMAwEwaLktS6AIKwlEQDB0kQABEsTARAsTQRAsDQR
      AMHSRAAESxMBECxNBECwNBEAwdJEAARLEwEQLE0EQLA0EQDB0kQABEsTARAsTQRAsDQRAMHS
      RAAESxMBECxNBECwNBEAwdJEAARLEwFYAVVVscrjlHRdR1XVtS7GEyMCsAL5fH6ti7BqRAAE
      wcRsa12Ajerf/MWvLNEMMgAMA0mS1rooT4QIwAoNTy1g/tPf/FapCaSRmp9mYm4J/dFVU8uS
      XEqQzOqfeu+GYZBPLRBbyv/6pFRTzMeSqPrvcZrmUyRSWfLapy6SsEGsUgCSdJ47xf/9yRkm
      kg/PrsQk9+/eoH0y/el3b+jER25x/lovCRVAJzV2l7PX+0jkfo+zOdrF7Z4Roo+hSMLGsHo3
      wf56niqe5WLbNI/7AivJMr7yrVTke+mcSKJnorT3JtncWInPIVp5wsdbxbPDTsWeA8ydv0Jv
      8xdo+o2/6aSmunj3WjcxzUlp3XZ2NYeJjcxiLwhTHPahTd3lbBvsOraTYjnO4PACvkCEcJEb
      CQmHN0RFdYSOvjZ65nXm3SXsCQewSQbZxTHu37jDcEzFW1pH645GSgtcJHvvMBHaDN3XGZfL
      2V72vhJlpmm7M03ZnhaKHaKzzKxW91/WW81TrQ7u3xgm9/7fp4e59yBBYWUd9TUR9PgQ3YNL
      5KZHGIlGyWgQ7ephPtlD76yOtjjJ2NQ0i/lfF19SnETKKvGlunjr5gzhklIKPXbQs/RdOcuw
      EWFTbRXu+AD3uoZYzOikRru4fuUiXUteSkqKcCvL+9IX+zl7rg0jFMYtm7P3Q1i2yu0DmWDt
      ASp6T9M2c+i936ZHurh44QYpQ8Ym6WR0D1ufLuNknZ2+uTyp7Cw982H27LMzNDDNQjiDw2Ej
      EHLw69NTwl5QQmVZPXG3THllETYZdHWM3sEI+761jyqXTH7Gzs/vLpBMZLGTQit4iiO7Kwl6
      HMhTE4xd/xlnpwIc/srLbG0owyku/qa26g1kmztIbXM5V250EKj24gfymTTlR77OH+wqw2WT
      MAxQ7A6ckh26pkl7h5kONbLbazC3eIdOfwleJUKh/TevzpLswOMposSWx+1SHoZDRdUduBzL
      P9sdDiQjs9yHL/mo2bKJkFd+L0hlu15iN8OcvzvK/roSHLKMqAPMa/Wvb7KdovJmatz9tA8t
      d7cEqhowum/QNjpNbH6OqfFxxqdi5B3lbFZi3G2bpHhrMR63n4g7ytB4BkekBMeHzkwJkJZP
      2Id/k6Qa6sr6uXztAcMjA9y99QDF68XtcwES8gdOcMXuoHDrS7xWO8BPz/WymNVFf7+JrVIA
      bBRGQnjstuUbVl8hFS17qPG5CHoUCLXw6vOVTF4/zeunfsGVjjFydhc2nFQ3FZFSaqgPyihO
      F+5IDWGbi3CR8yPfyeHzEQgEsD86QNnF1mefp3DiCr944wxdmRJam+sJeWSc4XKKHO/b2FlA
      UcCLS5Ep2vs5Dtq66Y3mRABMTBKrRP7+0uk0X/vz10UwTEDc4gmWJmqAFUin09zpj2KFT07X
      NTRNw253fPKLNyARgBVIp9O4XC7TjpB8P1VVUVUVl8u11kV5IkQTSLA0EQDB0sRIsRW63TO5
      1kVYFZqmo2kaDof9k1+8AYkArNCff++C6AY1AdEEEixtndYAKUbbb3L1ygMWACQ7kboDHDu6
      lQIRWeExWqenU57FvI3izbt5/vnnef7oPsLzFznXnfq996Rrc9w8e4f4EyilsPGt0xoAsHso
      Ki2ntjaCYeiUKMO8OZkG3BiGga7p6IaBJMnIiozM8txgTdcwDAlJllFkUNUMC9EFMvk8HklG
      VhQk9A9vL4GuGxjGo/9AVhRkWRKjQU1s/QZAy5KIR5ma0lBTs9y7NE/DK0UYWobZ/jucO3OJ
      B1NJHMVNPPfKSfaW25joOMfP3rzBdFYm0HSMbxy08+YPf0nndIJz7eeI1O3hxGdOUrZ0hzOn
      L9A2vogr0sThF1/iQIPB/Su3Ge0cZiw2yUwyT9WRf863jldhzv4PAdZzAOLj3Hmnn2u37Ni8
      pWzft49Sm0Z+YYqewWlKj36Lz28pJD30Dj88c5f6r7SwGItTceQrvFIbxOZ0ESrw8Yf/toZ3
      ftrDzi89QwggNcTpS9OUHvkGL28Jkxq9w4V3LzJYfhjyBp7aA3z9YBMB+vnJ3/WToGp5O8GU
      1m8AgrU887nDtLQUo+XijLWd4dK9IC/W5JBsTiqrIzhs4Khvpe6Ns0Sd+4lU1tB36z43Y358
      hVVs39VA2P2B/cbnSBSU0VgSwqnYUCJ11BZ3M7sALn8xmwMVhDx2DCNEkXdqTQ5dWD3r9Cb4
      Nyk2D56AnWQsgcNpAy1PdHaBvKaSnBhg0lNEAQrecANHXjzOgZZyMgN9jC0m0A3QlhZI5HR0
      XUd3+3En54nGEuR1jdTiJFMLHgp8a32UwlpYvzXA4gjXrl7m2jUXSDI2h4+Gw6U4C3UqSgu4
      efkf6TirITu8VDx1jJCWY2LgFlfaJkhqEg7/ZrZ53CgSBD2jvPn9vyZS1cyB/TvZXjPNzes/
      5875PIqzkKqmvWwOQPdaH7Ow6tbpaFCV5MI80Wic5ecwyzi8hZQUh3AqBmpmidjcPPG0iuIK
      UFxShFsxyCTmmJ1PkNMlXIEwxSEfdlkiHZtgOpZG8RRQFI7gNpLMR6MspvIorgBFkTB+p8bS
      UhZFceJ22zGMPIvRFN5IwYdugsWEGPNYpwFY30QAzGP9NoHWudIinyUmxCxfH5e/LzEjUQOs
      gJgQYx7mjLUg/I5EAARLEwEQLE3cBK/Qn377HIYF+oEeDQ6UZXNeK0UAVqhjcMYCp7/5rTzW
      ho6WS5F5jCtoGoZGKh4jkco/gZNLJ5/NkMnk+fSLMglmsfIAqBminWe4Mvb4CqOmRnnz+9/l
      H893kHzsZ+kS/e23uXljhOzj3rWwYa2rhl12upNM9fNss08wkhDXaeHJe/z3APlFeu7cpm82
      jSNQSv3WJqrCbrLTvdzrGGA+beCP1NKys5HQbzxtT2WyY4bK1qfwz80wMRrHKChEIkZ32wxK
      bpaBmUUkT4T6bTvYHHZBNkZfexv9UwkMm5+S8hrqt9fgTUUZ6O5iYCoB7lJan9pJ6QeGReuZ
      KN137zE0l8NTVE3T9kZKPRqzg9109o2TyMuENu1i77YSzPlQQAEeew2gMnn7HLemdXwBP9LS
      BF1t7Uwm5nlwu4+44aSgMIBTVlE/eIHPj9ExX0FzuQe3uxBjdpSEAbBA99Xb9EXz+Pxe8olJ
      +nunyJJk8OYNOidTuAsKcJFg8H4vi0aS8eExogkDX0EhXtsst28MfqDZk2G4s4eY5qSw0A+p
      KAOdgyTio7T3T5FVfAQLfMhqTtwvmNxjrgFmuH9fp+ULh9gWdKIuDHLl/ggzM1lcxjz9gxI1
      9Q001VdR+IHLan7oPrPluwjbHKT8XuyTE0wtGASCQKCSXXt3Uxy0Mz3Uw9BEEi2lM5wtoHln
      E7UVflKzvVw7PQRLszy4+y7X++O4PA4MdYm0nmP7M0d//WaZCe5dvkxnElwOmVw6h79yF+V1
      zRgLU4ykPdTUNdKyqVhc/U3uMQcgSyrvIRRwIMsyDrcbu11ByzloePZlQhMj9I2McO0X7Ywd
      /SZHNz8aaJynv62T7qtX+LPzMoaWRws1cLJ8Nw1BwOmn0OtElg0Umx2brEI+g+ryU+Bzo0jS
      8uR2CchloHgLx7Y30lCyPH5FVtwE0Ol/VMxcknh4D199tQm/xw5I2BxufD4nJSdOsmlkmPHx
      B/z8B/0c+2efp16kwLQ+VQAMTSWViBGLASi4fKVsqz7N2Sv9vLg1yNLoA+YXNLY0KUyOzyN7
      yti6PUyh6wbTqQw8HGlvpHu5F93Fv/5Pz1LltAFJ+q7dZmJ2gni956Pf3B/BP3WRu3YbO2uD
      JEZGmM1CQ0ERwVwHI6OTlEfqCMh55kdG0UMV79u2gkb1CteGyji+vQTSCWLxJXTVQzyexh6p
      obmkGFv8CksZENWAea08AJKMpubpOPN/6ACgjENfOsH+468y+8YpfnAtjqukgYNHj1Jb5GRm
      6AZvnW5nNiVTsu0oJ/f639uVEUvi37edcocDRZGAAFU1JSTndTIZJ6GQF/nhcqV2pxtfQEOW
      Q2w/sIm33jrN37yTx1dcSoEcRrFFaD3QytL5C/z0+++gOwrZsu8Fnkch5fMTsLmQpRD7XnmW
      6KkzfO96Eru/hJb9z7C/TCHRdosrdweJqza2HP0yLwU+1ecrrHMbeDj0EqOdfYwvZJAUyKYX
      Ses1PP1cE096eq+YEGMeG3gohIJd1kjGZkjkDdxFNWzbXffET37BXDZwDbB20uk0F9snLDEj
      bHmJJB273ZyPBxMBWAExI8w81tVQCEFYbSIAgqVt4JvgtdUzOrfWRVgVmqY9XCLJnF+GiACs
      0L/732+LblATEE0gwdLWVQ2g5xbpuXaJtvE4eEpoam1lS5VBd1ua5uZy7HZlrYsomMw6qgHy
      DF78KTdiAeqaW2go92HkMmTVBIODc2jaBxscKfovnuXG4Bx5MWZZWKH1UwMkOrk8Vs0LXzxA
      idcOmopqgKJ83JxLJ+WtuylxeFHM3x0vPCHrJgDaWB9603FKfY7lNbls9l8PwkyP8+4/XORC
      9xRKpJFjJ1/l6XqFnjNXUQ/sZUdZAYvjD7jw+s+4MZHBV3+IL/7BfpT2N/jB6VvMphVKm4/w
      2S9+huaQTHZxlHd/8QYXOyfI28I0bNnDc199mlB0gKtn3+bdznHy3lpOvPZ59tWEcIiWl2mt
      mwBINjtGNosBH16Uzl3BoZdO8JzLYGZkgOGxcVL1VeiqhmYYaGovZ34W5di//Pd89tE22hL9
      viCVFZUoiQy5aB83r/ZQc9TO9S6V5pf+Bc993U5yfoCrb/RgLAxw/cE04cPf4s++6sEwDAZ+
      +Rec5Y95qXZVPwphFa2bAMgVjfiuXKOn8TnqIx6kfJq0JuF0fvK2En78nl6iizmCfhuapiEl
      ergxUsgL3/xXlHky9HXcpHccUOzImRjxdIaIYUPLpMlqgN2BXcuTXkqS010ouQVmE068H1xi
      STCVdRMAPHUc3NrFpYtnGfQ7UVAI1jTSVPfJm8pyKVsadW6fP8OQS0EKlLGjxkuJd5L2K+/Q
      ZZfIZBLkKQV3hEpnD/evv8OA14WkpVlQ7eCNUBUco+PBu7w97ELR0iy593A08uQPXVg76ycA
      2Cjf9QKHXO0MzqWRXYWEQwFcCuzY4cNmW+6w8gWLqbYbOHBRuWsbeoEPRbZR2foM+Y5uJpZU
      HB4PjoIKdm3L0jE0j+4MUFnfiMfw4ZScFNfWUyNNEs/qGLYsisOFQ/YSaWwBez8js3F0ewnb
      WrYRXkefkPD4WXA0aJzey5e52j5EXNWxB0pobD3MwR2lv/PMRzEhxjwseH3zUrX9KQKbd5DX
      DRSHl4JggZj2a1EWrAE+vXQ6jSFZ49qhaSp5VcXlNOd8AGv8Kz4BbqfNIhNiJOyKhMtlzhlh
      62gohCCsPhEAwdJEE2iFvvPmHUtMijcMA13XURRzjgcRAVihU5d7RDeoCYgmkGBpGyYAanaG
      N/7qv/Hdt7rJrfTSqy/Pb9UfbW8Y6GqO7Iee1S5YxcYJwFw70eDzNKv9DKVXmID5Xu60tTEQ
      e/QLg4XOt/jR1ce4zpOwoWyQewCd2fZhSna+SjAeZWIkSUOTD4kUU8NJCiqKcNsgm1xiaUnF
      V1KIPj/F2NQcaVXCVVBKRbGT2MgAwyM55lISyVARdXVl+Kp3ccyIADkW5hfJxJdIpJOkVSgo
      b6C6yPnh4dmCaWyMAGgzdE6G2fasBwZD6JOjpBq34pWmuXa6n11fO0K1TSE+MURnT4KmFxuZ
      uHuH3qlFNNmGL2TgKwgzNTbM+KiKcyHNfFE9ZTURcn0XOKef4Jv7DfrbbzEyFAePQSYTIz2g
      8LXPbkWMiDavDREAdaKN0dBWjjucJD1+HNokU0tN1Pk/ZgNDJZlII/ki1G6qoqasilChl/JD
      x6A6Q2H1TupDgKEz//7tFA8lWxpo3bUJNyOc+n/DpBEBMLMNEACVsfZOhtq7+PaEEy27RMIW
      5umaBLUfFwBHES17W/EMT7Aw2c/lnn5aXjhJ4ye9lStAJBDE61QwDC++32EyjrCxrf8A5Mdp
      Gy3n5Bd2Uea0gZFipHuE3MwUyTonspomrRqoyRij/V2MJytpyqbI2oPUtpRj05fovXCK0QVo
      9EJ8YRF7OIkWcIIsWvdWt+4DoE8OkWjYxXO1tXjtMhg6QT3NvZkFFpZ2snfHFf76f/5nsvYI
      VZXVlIUVJFlntu1tfvVuB9GMQtW+V/hyOUAxEf0Ov/r2f+HHoYP80T89TkC2oTy8zZVl6b2V
      aEBCsW2YTjJhhcRw6BUQE2LMQ1ziBEtb902g9eqlA/WWqAEMXV8eDGcz56kimkArIFaIMQ/R
      BBIsTQRAsDRzNuxWgapZYwSpquqoqoaiamtdlCdCBGCFXvsPf2+Jm2CzE00gwdLWNADp+Xmi
      sRi5hz8busrCWBdj8bUslWAlaxqAxPg4YxMTpB/+bGh5prsu0BV9fO+h6wn62wdJPb5dCiZi
      +iaQYSQZ7h4ls9YFEdal9XsTrGeZeXCDsxdvMRo3KN3+Ap97YRvOxVF6h8dx1TxFXRAYucjf
      T2/htT1BokN3OPOry4ykJAq2HOHzuxXe/snbtI8tcnXgKpFNrTx7/AQ19HLpzDvcHY7hLt3O
      0RPHaI5keNDey0zfMIOTo0ynJBqPf5OXW0Pmv0pY2BoHYJYbp97k7/7W/nA8poHdHeBInUFq
      vJNbAzFqjnyR42EYvvoGr98o5Uub0yQWY+j5h7tIzzOxmEVNLzE9Mkzo6a/yfLnCUk7GF/Tw
      mW/48L/Zz7aTBwjZHLgd09z8RTv5qkN87ViE1Og9bp6+RMFrO1manmTWKOHpV48QMPr45elO
      FlsPE1y7D0h4wtY4ABH2vfJP+PK2bRQAej5N7/m/YYQcs5MZ/EU1NDVVEpQgcHw/vX/7gPjm
      8EfuyeZ04fM76Tn9D0xt2krz9hbCERe+Aj8el4eCYJACgKlupgLV7N1ST1nIgereTWruDYam
      d+IqrGJ7dTV1FSEMA8o9naKr0+TWae0uY3dI5HMZ0hkVQ1dJzy+gejzYePS0Mg1dzbAQT6Lr
      Bobsoqz5Ob7xh6+xv9ZG59lLdE8voMHycquagWEYGDYn9nyaVCaLZujkMwmWMnac4vnolrRO
      7wHsFFUUYZ/t4s6lS/S7DJZmpijZu5eAcxG7nmHgzmXifoPM4ARq2EBXs8wOdjAwpyJJCqHi
      EF6nDQkZpzrMtUuXqQqXsrmmklrXOH33rjI94EJLLpC0N3IoBEOja33cwmpb0xrAW1JCaXEx
      j6beSrKdcN1e6oLgDG9ie3MjISVLPJHF33CEww1+bP4wm+oaCMlLLOXsVLY+w9MNQWRFwe31
      YqQTLMbTBLdsoSrgwyYX0HSwBW9qkUQqiyoV0rinldqQjdRiHN1Xze6D2ymyuSkvL6Wo6NEU
      eC+1LZvEhHiTE8OhV0DMCDOPdXoPIAirQ9QAK5BOp0lkrDEaVNM0VFXF+bss2LwBrdOb4PUv
      UugRM8JMQDSBBEsTARAsTTSBVuhH5zossUSSbujomo7NpE+FMOdRrYIfvt0uukFNQDSBBEvb
      MDWAmpvgl3/5l1yJgmL3UbnzKC89u4eqwt++gMWDn3+XxUPfYr9vnvauXjKOOvZu/egBdYL1
      bJgAgIS3+gR/8sdP488uMHDjLG+9nefE8aeoLHDycT2SuaVFMhpgaGSzadKGOZ9uIKzMBgoA
      IEnIioLDU0TTkRNkT51naH6RkkCY/PwEswsZVBRcgRCRYACn7ePqBo10LMrMwhJ5HRyeQsKR
      EB5FI7UwTzSWIGdIuApKKAt7MecKuQJstAC8nxygulLlnQUVTdWZ6LzElb4UeUPCEarj0ME9
      bC7xfszGOWZ77/Ju9zgpFRzBMlp2HWFXcZy2m9d4MDJPXlII1h3mpaP1eFb1wITVtHEDACAZ
      D7siJQLhKioyCbLZJJOj44zObKbiYwNgxx2OUFUuEc+miS3O0N83xbaQwUIKgjVb2VRVTnEk
      gpgmYG4btxfISDI1bSMYUJCYpKttFsPpxV9QSECRUPU8H9vaT0/yoDdK3ubEHwgQ8LkhlSbn
      q2BHcx2F0hKTA21cvXSfWXU1D0pYbRsyAHouwfDtC9xa8lMd8iMbc0wlw+w5cJC9LXUU+Wz8
      1k76bJSJbCFbdx/kwK6tlPts6ADZHEqwkpZ9T7F/zzZ8831MiuepmNrGaQIZKnOdr/Pf757G
      prgo3rKHZ47spqrQjWJspt73Hf7Xfz2Lt6yGYslL9W+7c/XXsdXxY773P95A85dRs7Vyeb6w
      kWHw2ltcuD1AQlOoe+pL7P24VpRgChtmOLRhGOiaiv6wzS/JMoosgSSBYWDoGppuIEkyksTy
      /2UJQ1NBtiFjoBsGICHLoOvLX/EjLe9LMlh+va6jGzqGsdzjJMvSh75nEBNizGPD1ACSJKHY
      7B/dJSlJSIoN+SP+KCmPDlFCft+XBbKsIH/EBpKiIIuOT8vYMAFYbw7vqLbEYDjD0NENA+Wj
      ri4msGGaQOuJWCLJPEQNsEL5fP6TX2QC+sNF8nK53Ce/eAMSAVghRTFnk+CDHtVyZj1eEYAV
      kmXZEk0gWK4FzBqADflFmCA8LiIAgqWJAKyAWZsDH0WSJGTZvKeJ6AYVLM280RaE34EIgGBp
      IgCCpYnvAVbMwNB18rkcec1Attlx2G0fOXp0IzIMlWwq+96kIkmx43DYsclmOLplhmGIAKyU
      oWvEJzo4/9Y52qcy+CpbefGFw2wp9aOY4BzRc2185z/+mPnC5TFA3s37ePmFozQUm2dMkGGk
      RABWSs8lGensQNnxGn/yjQDjV09zp3+CilADAacJWpZzc9ie/SP+9OXNa12SJ0bXZsQ9wErl
      80lii16at1fgdvqpba3HiCdRc6opJsposTncxZG1LsYTZbNvFjXAShlkUZUwhQ/XjZALCvAt
      jZJSVYImeJZEciHGcNub/GhIxukvYUvLduoqC3GYoHn3fiIAKyYhofPeOjEGGHYbdpMMkPNs
      eYGTnjgYOpnFaTo72rA791BfbK6nJIkArJCMG5s6yVwKwh7Qo7MsuhzYTTJMwhmpY1dkuadE
      y01w/VIfiWicfLEH+1oX7jES9wArZHd6KSk1uPtuF9HYJLev9eArKsThspugGzTG9ddPcX8s
      RjK9xPzwEBPJDDa/z1RXTENXxVigldPJLIxx/VenuNSXpKT1GCeP7qTEb4YAQG6+i1M/+jnd
      M1kckTqefu44e7dETHUPkJu6LAIgWJtoAgmWJgIgWJoIgGBpIgCCpYkACJYmAiBYmgiAYGki
      AIKliQAIliYCIFiaCIBgaSIAgqWJAAiWJgIgWJoIgGBpIgCCpYkACJYmAiBYmgiAYGkiAIKl
      iQAIliYCIFiaCIBgaSIAgqWJAAiWJgIgWNr/B/3+U6NNJ/R4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='United States Cities Data' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
