<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='result' inline='true' name='federated.0jb60kj0b480uh17nmgml09yjob6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cities' name='textscan.1iuowg319g0l281cm4l3o0zyugnd'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/etang7/Documents/590-cities/Data/cities.csv' dataRefreshTime='' directory='C:/Users/etang7/Documents/590-cities/Data' filename='C:/Users/etang7/AppData/Local/Temp/TableauTemp/1bvsa3z11k8dwo10vjbxm0hi1k6o/cities.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1iuowg319g0l281cm4l3o0zyugnd' name='cities.csv' table='[cities#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:K112:no:A1:K112:2' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank Rank' ordinal='1' />
            <column datatype='string' name='City City' ordinal='2' />
            <column datatype='real' name='Cost of Living Index Cost of Living Index' ordinal='3' />
            <column datatype='real' name='Rent Index Rent Index' ordinal='4' />
            <column datatype='real' name='Cost of Living Plus Rent Index Cost of Living Plus Rent Index' ordinal='5' />
            <column datatype='real' name='Groceries Index Groceries Index' ordinal='6' />
            <column datatype='real' name='Restaurant Price Index Restaurant Price Index' ordinal='7' />
            <column datatype='real' name='Local Purchasing Power Index Local Purchasing Power Index' ordinal='8' />
            <column datatype='string' name='Country Country' ordinal='9' />
            <column datatype='string' name='State State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1iuowg319g0l281cm4l3o0zyugnd' name='cities.csv' table='[cities#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:K112:no:A1:K112:2' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank Rank' ordinal='1' />
            <column datatype='string' name='City City' ordinal='2' />
            <column datatype='real' name='Cost of Living Index Cost of Living Index' ordinal='3' />
            <column datatype='real' name='Rent Index Rent Index' ordinal='4' />
            <column datatype='real' name='Cost of Living Plus Rent Index Cost of Living Plus Rent Index' ordinal='5' />
            <column datatype='real' name='Groceries Index Groceries Index' ordinal='6' />
            <column datatype='real' name='Restaurant Price Index Restaurant Price Index' ordinal='7' />
            <column datatype='real' name='Local Purchasing Power Index Local Purchasing Power Index' ordinal='8' />
            <column datatype='string' name='Country Country' ordinal='9' />
            <column datatype='string' name='State State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K111:no:A1:K111:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>880</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Cost of Living Index</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Rent Index</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Plus Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Plus Rent Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Cost of Living Plus Rent Index</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Groceries Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Groceries Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Groceries Index</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant Price Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Restaurant Price Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Restaurant Price Index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Purchasing Power Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Purchasing Power Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Local Purchasing Power Index</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Cost of Living Plus Rent Index]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Groceries Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Local Purchasing Power Index]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='cities.csv' datatype='table' name='[__tableau_internal_object_id__].[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]' role='measure' type='quantitative' />
      <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cost of Living Plus Rent Index]' derivation='Sum' name='[sum:Cost of Living Plus Rent Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Groceries Index]' derivation='Sum' name='[sum:Groceries Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Local Purchasing Power Index]' derivation='Sum' name='[sum:Local Purchasing Power Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
      <group caption='Interested Cities' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[City]' member='&quot;Austin&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Boston&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Chicago&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Dallas&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Houston&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Los Angeles&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Peoria&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:City Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#dcd4d0'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Plus Rent Index:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Calculation_800514837127700480:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rank:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Local Purchasing Power Index:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Groceries Index:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[__tableau_internal_object_id__].[cnt:result.csv_4D2F7406BCB24DD1B8287691D6A198D1:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cities.csv' id='cities.csv_430A602D22F24C35B1704FD5DBBB8A87'>
            <properties context=''>
              <relation connection='textscan.1iuowg319g0l281cm4l3o0zyugnd' name='cities.csv' table='[cities#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:K112:no:A1:K112:2' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Rank Rank' ordinal='1' />
                  <column datatype='string' name='City City' ordinal='2' />
                  <column datatype='real' name='Cost of Living Index Cost of Living Index' ordinal='3' />
                  <column datatype='real' name='Rent Index Rent Index' ordinal='4' />
                  <column datatype='real' name='Cost of Living Plus Rent Index Cost of Living Plus Rent Index' ordinal='5' />
                  <column datatype='real' name='Groceries Index Groceries Index' ordinal='6' />
                  <column datatype='real' name='Restaurant Price Index Restaurant Price Index' ordinal='7' />
                  <column datatype='real' name='Local Purchasing Power Index Local Purchasing Power Index' ordinal='8' />
                  <column datatype='string' name='Country Country' ordinal='9' />
                  <column datatype='string' name='State State' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cost of LIving Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter from='&quot;Albany&quot;' function='range' level='[none:City:nk]' to='&quot;Wichita&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]</cols>
      </table>
      <simple-id uuid='{30D9F66E-B97A-4AA5-815D-83288CD36172}' />
    </worksheet>
    <worksheet name='Interested Cities Comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Groceries Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Local Purchasing Power Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Groceries Index]' derivation='Sum' name='[sum:Groceries Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local Purchasing Power Index]' derivation='Sum' name='[sum:Local Purchasing Power Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Groceries Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Local Purchasing Power Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[City Set]' />
          <manual-sort column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Boston&quot;</bucket>
              <bucket>&quot;Austin&quot;</bucket>
              <bucket>&quot;Los Angeles&quot;</bucket>
              <bucket>&quot;Chicago&quot;</bucket>
              <bucket>&quot;Houston&quot;</bucket>
              <bucket>&quot;Dallas&quot;</bucket>
              <bucket>&quot;Peoria&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[City Set]</column>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[Multiple Values]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{E15D5B7E-51EB-4061-8F5D-3B6F4BA3C3A3}' />
    </worksheet>
    <worksheet name='Rent Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter from='&quot;Albany&quot;' function='range' level='[none:City:nk]' to='&quot;Wichita&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]</cols>
      </table>
      <simple-id uuid='{B956DAD7-362B-443E-86A5-B308CFD38449}' />
    </worksheet>
    <worksheet name='Resturant Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]</cols>
      </table>
      <simple-id uuid='{B7F4B776-51E4-4E77-B9A3-348255381D20}' />
    </worksheet>
    <worksheet name='United States Cities Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='State' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jb60kj0b480uh17nmgml09yjob6].[Longitude (generated)]' field-type='quantitative' max='-6383978.4992957991' min='-19009177.337252311' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jb60kj0b480uh17nmgml09yjob6].[Latitude (generated)]' field-type='quantitative' max='9034276.7959198728' min='2069606.3303346741' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:Country:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:State:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[Latitude (generated)]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6FCFEC06-7D17-4DCA-9928-922305FB4685}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='United States Cities Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:State:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Calculation_800514837127700480:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{3450AA80-037F-401C-86BA-2F99DE46185A}' />
    </window>
    <window class='worksheet' name='Cost of LIving Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F153284D-C202-430D-9BCF-BD0241A97FA4}' />
    </window>
    <window class='worksheet' name='Rent Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F7D7E1B-B795-4FC3-B973-C361C20057D6}' />
    </window>
    <window class='worksheet' name='Resturant Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3019034-FDD7-4FB9-9AB4-F86F90240638}' />
    </window>
    <window class='worksheet' name='Interested Cities Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[City Set]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92C61F23-1CB0-4A12-87FB-FFF71CE8FB12}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cost of LIving Index' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Interested Cities Comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rent Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Resturant Index' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdhklEQVR4nO2dyXJc15aev9Nn3wNIAOxBSdTtbFdcl6OuPajw1C/gB6gIv4UjPHX4FcoD
      jz1yuSIqXHaEm/J1lW5U6UoUKYok+j77PvN0e3sAShSvGiaAfZRIcn8DqgH5n7XAXDjnP3vv
      tQwppUSjeU8xFx2ARrNIdAFo3mt0AWjea3QBaN5rdAFo3mt0AWjea+xFBxDHMaD+TayIBaal
      tr6T0ESCkALTvPmxJpJ/QrrzaiosAMnB7g65ap1KIfs6ECmYTWdkMpk3AxQxYSiwbZO9Z0/U
      haHRXAKFBRBjOVlaZwc0jwWF0grT6ZDzRova6irFtE1gOMx6XTKlCr3WGaWVu6zV8upC0Ggu
      idL7Trt5xmq1zHAmOT85Zu3OPfLZFADHB3u83NklU6gS9JvMYm0/NIvHULcVQnIVJSEEp/s7
      akJ4IxwJhnHzNS+EgSWINan8FxirwgK4GnEcY1mWct0oirBttR4/CU0pJUII5d+DZck/Kd15
      NZVcVcQRfhhjmQau677xNSkiwtgAGb/+mhSEscB5FeC//nf/WUUYGs2lUVIAoT/hybN9qpU8
      KdvAsDOkXANhpyhm0+w8f0KuvIY/GVCt1hhNxkRCsrqyhudYTP1IRRgazaVR5EQN1qo5zltd
      nn35JYNhm+2DU3Ze7GCYJsV8kXzGIopjDvf3yRTKnBweEOuN2JoFo8QDSCEQUhKGIXEYYLlp
      DAQAnucRRxGmZTEcDMhks5iWhYhjpATTNPizf/9fr53I90SFcmOZiGZSusuimZTufJraBC9Y
      U5vgd8AEA0gRM/NDvJSH+Qevn4QQGIaJ/IEl/8OXX6kK43U8UmIofrWWhCaARGIo/gm4VPkv
      MFZlBeD3Tvliv8faSg035YA/Jldeod1okPZsnFyJfuuctfomQvg0z1vUb9/DMSHwZ6rC0Ggu
      hdLlWMtxCQcNIttjOPZ59g+fYDmwf9Jk7/AEMDk92qbZbuE4GfrdgcrLazSXRtkdwMlVyXkz
      Nm59gO2l6U7TbNz5EzqNc375i4+RcYw0TBonh6xv3MEQSRkqjWZ+boQJVr0V+EI3wrLUGqsk
      NJMywcuSf1K682ou/DwAwNnBrnLN5TKBSWyFWab8l8QEi1mPTx7v8dGHW0RhQD6bYjKLKGYc
      Pnv6Ffe3PsQxJdPxmEK5zHAwoFjIMZxMMaVJFIXkcmn8UBIFM0qVKgCT0fBqWWo01+RSBWA4
      WdYqac5Pjzk6OWV9YxPXdShm1pBS0jw/oVYt8fL5F+DVWSunaLTb3Npc4ezgnO6wT65YpF72
      aA0EI19wq15NKjeN5q1cqgCklMTCpF5fwXY8VldXsS0D03b52c9/gYwj0imX+q27ZHM1ijmP
      IJzRH86ob6xidxzKxRyzGFyzz9qK/vBrFsuNMMEiVr8ZLokV5iQ0peSVCVb7ImBZ8k9Kd17N
      G2GCe62mck1tApdDMyld5SY4HHX4YveMh1tbeLaJZRkIIen3+5RKJYSUOCY8fvyYfKXO5loV
      23EQIqTZ6LNarxGHEbZjI4RAxDHOq/MBg2776plqNNdg7gKw0zkytqRxvM/TF3s8fHCHKBJE
      wYxRr8XjnTP+1b/850RRhJQhv/1ff02+cofiapFpp0e/32Jve5eNO/coVou8+Pz3fPhP/gWb
      K/pQvGZxzF0AcRiCYZErFHm4dZ96fQ3bNBj1O0jT5uE9F8M0yeWypNMZNu8+JJMtsbpeY38y
      oVBdwcCkWF2hWsnhP/iAfMZJMjeN5q3cCBMcTCfqdYXAUrzCnISm5OI8herV8GXJPyndeTVv
      hAmezabKNUUCH6okNJHywrAtQayJ5J+Q7rya6gogDvniy2cUyqvc2Vz75n93Oh0qlQoAjcY5
      q6tr3/mjnfNTZWFoNJdBXQFIge/7+P6Iv/ovf8v6nS0y5RKd4x3W1tZ4/NU+H3y4xdH2l/hO
      kc1qgVRpjWohrSwEjeayqCsAwySTTuF5Ge5tbVEo1VhZX6XoSMIYth4+oFTIk7VuYaQKtM6O
      +dW9LaSIlYWg0VyWhZhgKQW+H5BKpYjjmPGgr/way/MM/MoDGDc/Vu0BFGEYJqlU6vV/m+pX
      Fw0M5bpJaCINQC5FrInkn5DuvJrqzgSP+shUjvFwSLVc+s7XO+02lWoV4oD20Kdaer0A1jg6
      UBWGRnMplBVAMO7zYvcI14w5OjzGdW38qU+hmGEyi8mkPWb+DKIpg1lIFK1gCI9qNfN2cY0m
      IZQ9eNmpLI8efUSlmMc0wPYybN27jWWZmKZJOp1m1O8w9iXZTJazo0NkArdTjeYy3IiV4H5b
      /W5QISSm4gJLQhOS2Q25TPkvMtYbUQBhAn2BlmU/vJT8YMOw67As+Selm+x5ABHSH4dMRgNy
      uSz5/GtDOxqNyOVyzGazN970xHEEmN978ON49+WVwtBorsvVCsC06Zx8Rde3qcUhey+ekCmv
      0e6MqOZtDnEpFzL0uy3S2SLjYR8/ELjZHLbwcbNphq0Bm1sfUczqHaGaxXHF+65BEEturWSI
      pUMYQzALCcd93EKVWilPHMeUa2u4RkQQ+tipLI4FYRQTBAEbt+8io1BtNhrNJUneA4iI7Z09
      Nu7cI+1+94YTxzHtsxPll5VSKF9dTUIzqZXg5cl/sbHeCBMshUhEdxlMoJQSIQWWefNj1Sb4
      Fe12i2wmg+2msa03XzUF0xGHZx3u37uDaQjGY59s9sd3fO4/f3qVMDSaa3OlAmidHtKw02Sz
      OSZ+wGqpwMT3yeUKdNtNNlezPHu+Tz5nEY5mjP0Ja/VVGp0RpbRJIG3C6ZDbDz7Cs/VimGZx
      XOnBq1CtM+m3OD89otHu0zw7otdpExsOrgXbu6dgwvr6Kv5kwOHRMaen5+zvHoCbIe1a9FoN
      ekP1RyE1mstwIzzA+eGecl3dF2c5NJPSnVfzRhSAnhGmZ4Qt/YwwgF67geHlKebeNL0iihCm
      if0Dy/3bTz5TGYZGMzcKzwTHHBwcsXH3ATsvDihUVmi12jz84CHRcEg7mDIZ+RQyDoabZdrv
      UNu4TcpR/9Nfo5kXhXcAg2qtwvnpAWcnh7jtiI/vVgnikGazyTCOsUVEYyKJ6XC6d8CvclXq
      Vd0ZTrM41HkAKZlOJ9iuRxj4OI6HZZoYJkynPinPZeYH2JaBNCziMMBNpTGQHO88VxLCH4ST
      wNSVBDRf/bIUsSagmZTuvJraBC9YU5vgd8gEf40/mxIKyKbTc1Xhv/kPf6E8hmX5CajvAIuN
      NZECODrYpzf2eXhvk3EARjjGD0Jm0qXoSVKFMr1Gk/qde7gWnHXGSYSh0bwV9Vv7vha2LM6b
      bUa9Dv1+lzA2qBQ8+tOYk6OXuKkcg54ejqdZLIncAVZWVsgEknLOYxxKZDAmU6gwHo1YLefw
      chu435rhaiseD6TRzIs2wQvW1Cb4HTTBl+V4b1u96LK4wK9//ixLrO+YC75WAbx89hjhFlkt
      pjG9LP64D6ag3ZOsFG1ShQrD5hGnrSF3t+4T+hEZRyKsFONBl9X1TQxgNh5dJwyN5spcqwDq
      G7d4uXfC+azHYBpSqVQwTZ+0t8rZ2S5Bo896wWYy82meneEaglYMnuvQOT3BJ82d+nfbKGo0
      PxXXKoA4DKnWVvCMgPJqhnwuA1LQanUpl2ukChWyns0/XdtgMpnSH81YcwEng22YrJRzitLQ
      aK7GjTDB7/OZYJCvupjpxliL0LwRJrjTUD8iaVlaA8pXS8G6NeJiYv3BAhg0TxkHERPpknVN
      8tksnmMRxoJut8f6+gqPP/2cTGWF9VqZYNTDLK1hixDDMMmkBX//yXMq62usVYu4roMfRHiO
      xWQ2YDw0Wa2XARj2uuoy12guwQ8WQDqX5fmzA0peSN/I8Nlnn3Hr1gaRMCEOqddrxLHAlCF/
      +3//hvr6JsY4JBwPcNw0P3u0QRxJ4nGH//3lY27fus3hwTG379+mUkrTbg4xHJuVSvanzFej
      eYMfLAAnlWOzvoJlCErlAtIwqFSKhMIkmo2QmHzw8c9IeSZxEFEql7BSGdy1lVcKHoVCikJt
      lS3TplAs4jgOpWKOQEgePHwACTRZ0mguw40wwYl0h16SQdF6ULYelM1kpH5T3DINiZNC6EHZ
      78KQvN2XXzGJLX7+0UMAzs/2kJSov2Wxq9s8VxmGRjM3SgsgCHwi4fDJ//kfWKXb1PIh3UaH
      T353zsc/f4TrWBCbxGGfZ09f8qvf/CnrFb0YplkcSgsgm8kiI5PKrbtYmTIpJ8C1BG4+R321
      wmgSMu23ML0CDz54SCHjqby8RnNpboQJnibiAWJMxR2Xk9CUSGQCK8HLkn9SuvNq3ggTLESc
      gKb67RVJaF7oSl6dDlaouUz5Ly7WxAqg3znHl2kG7RNWN+6Qz2X49sK0iAL82MS1DZonR0mF
      odH8KIkVwDSQzKZNOp0uhpfnbPcp3dglIyICCbWVEqncOrWim1QIGs1bSawAUikP4U9Yv3sX
      07AJ0nnKhk2tVAYDomjyvRMjNZqfkhthgofdtnLdZVkIulgJTmI35HLkn5TuQhbCrsp+L4Hz
      AEKg+gaThGayWyGUSiaimZTuvJpXLoDZZIjl5fnD5s6jfpvITFPKZ77zZwa9HrlS6TvNiP7t
      f/yfVw1Do7kWVy6A6XiI52TZe/EM0/VoNrr8+o9/Tac/QjKmeTTEzuTwR0NMy2bv4Jjbd+5i
      nuzTnYIdTfn4H/2alKNnhGkWx5VvPAaS/b19olggMbAJmAURw36X3mBMqbZGLmURRBGj0YTa
      yirptIdpO9QqZTIph8FYzwjTLJaETbBgb3uH1Vt3yXjO9/6OOI7587/8vforS4Gp+LxBEpqS
      i+ZYpuojkUuSf1K682reiLdAcRQp1xVxjKn4oHUSmheH4oX6rQBLk/9iY732W6DJZEIm813D
      +yaSk8N90oUquUwKy3b49lu/w5fPrhuGRnMlrl0AvX6f1tkhPh4ynGEYUKxUOdzdo1K/TSnr
      kvUMYreAa4RsP31OnFtlvZzFtD3y2ZSKPDSaK3GtB6/ZeEC7N6TVbDKbzsiVVzBjn8bJEY3O
      ANeKOTzv4Hhp+o0TOv0huWIZx3Y43t8h9dY7h0aTLIl6gFG/jXTy5DNv7veRIqbRbLO2tkoc
      xzSOD5Rfe2kGRcuLLdHLEKselJ0AcRzjT9RPiFmWQ+EXb4HUvwVZlvyT0l3YoXgpJQe7L0kV
      VlirvT4L7Ps+tm0ipcloOKJULn7ztdODXdVhaDRzkcBeIInv+6TiKf/tr/4fWx8+YmfvkGox
      TTrjgVXEMwL+4Xe/5dEf/YY13SBXs0ASKAADx3GYjEdU1zYxRES5lKNcqeB5LpNphGs5VGp1
      Mil9FkCzWG6EB+g2zpTrikRWV9VrQjImcJnyX2SsN6IA4ihMRHcZ2oNL+epQvOL9wMuSf1K6
      P2l79E7jlImwuVVfeeP/N04PmQmH9ZUKtuvyQ/V4+PIrFWFoNJdGSQF0ez3cfJWXX36OmyvS
      6/a5df8RERaO9Dk6aWCKMRPh4kkfw04xnYxZv/OAQkb7AM3iUFIAmUyadrfNpNfD80PW7z0g
      GAdMhz0mAeSzObrdLma6RBz5xNEYYTrMZjNdAJqF8hN7AMHB7i75ap1y4WIuQBzHNI8PlV9J
      SoGheutyApogX030VL0Suiz5LzbWG2GCk1hej+MIy1L7ljcJTaS8WLVUbgKXJP+EdOfVvPZV
      g8mIyPLeOPDi+z6eN3/fz90vH183DI3mSly7ABrNBrGVxghHGF6ecDJgFoTYboZC2iLAJZ4O
      SeeyhMICf4jh5QinQ2rrd8h4N6IxheY95XqfPiloNlpEVorN9RoimjGezMjkS2RTNr1uhxCH
      ciFD5+yQo57PrWqFaNhn7+UBf5RfIePlFaWi0Vye63kAKfm6revXT/EijjFME8MwkOLiwLxp
      fv3vcLS3jVdYoVbOY1oWUghO9rYVpPLd2FC+dTkBzQth+MFVkqtKLlH+C4z1RpjgJFYXoyjC
      ttU+XiWhKeXFmWDV34NlyT8p3Xk1r33VfreN4aQp5F6f7grDEMf5/i4Q38fusy+uG4ZGcyWu
      XQDHR4cIK82925tIGTPo95lEkmI2RTAd4eWrjHtNwjAmstIUXEEqX6LbaLJx7wGebSBi9fMB
      NJp5uP7qgwESwcnREUdHx4SY2AZMJxOk5TLrnOALwSw0KWRs+pOQs9M9srkSw/7o+hloNNfg
      2neAzc3bGE4aIw6w3BSuY/O1rTAMA+Iav//0U+589CtcU1DIZnDS97C/1QcniV4zGs08aBO8
      YE1tgpfcBH8bKeXrD7QEY86e90fbz1WG8U0sy9AVQb761VD8GnRZ8k9Kd15NpQUw7pxz0OqT
      TqcIJ4KtrQ2G4wn9wRDHTePgY6ULyDBiNOyxcec+JuDPpirD0GjmRu2gbD+gvnmbbuMI24BP
      H3/FSrWEkJI4DoilwG+egDAZdNvEToG762WVIWg0l0JpAZTXb3G4v8+tOw8IxyNkd0i9vvrN
      Ouf+7gtWbz3ANcBNeazUCiovr9FcmhthgvV2aL0demm3Q6ugcZREa8RlORCiD8QsMlalBRBO
      ejzdPqZQLFPKukghcXJ5Oq0mK+Ui0nKJ/SlOOsuk3yI2c1TLWcbDvsowNJq5UWuCJyPq9x4y
      ae3z1ZMjLK8MnkO1lONof4fOLKacyWOIA4RXoFjQ3aE1i0VpAWQq6zR3d6isbYIwyebKeCmb
      GIPQtchZHqV8HhEFnDca5HO6ADSL5UaYYN0YSzfGWurGWNflP/31U+WaeiV0OTST0l3ISjDA
      6dEek9gmn3ap1apMpz6plHex0G8Y35zUkVJ+Mx39L36rfiuERjMPygsgEAZbd2/x5PPf0xv2
      iQYTZCZLPGoyjF1KGZfInyHsNCtrddZX9EqwZnEoL4BiNsX2/hF37m8BMWEhoNkbkq+uUbBc
      jl48Ib92n4wZUSzolWDNYvmJTfDFblHDtL5pXR3HMZ9tN5RfSYhY/ezdBDQv5gS/fhxUxfLk
      v9hYf2ITbHzv8vRRc6D8ShfDp1V/qNRrSinf8EOqWJb8k9KdVzOxAuh3Gkxjh/q3nvHD2Rhp
      pwjDkGz69XzgP//LT5MKQ6P5URIrgPNGi0BahNMxhgzZfrnLWr2MmalhGj6DRp9bWx9RLaWT
      CkGjeSuJFUAmmyUlTaJgQmTYbKyvkq9W8X2Bm8qx+lEdEthYpdFchhuxEvzf/179mNRleQaW
      cLESPOfx0XlZlvyT0p1X80YUwHQ8VK4rYqF8e0ESmshXA91UF8Cy5J+Q7rya13oEGgwGFH7w
      Xb7Pk89fUtvYfGNgNkAUTfF9m2z2onvc+eH+dcLQaK7MtQpgPBrhWoIX24ekUinG4xnlWp5u
      b8o//uVtxiOfVL/Jp3/3N2w9+piXL/d59OFdDFvSOhlw/6NHlPLzzxHQaFRzrftOMB1y1uyC
      AbaT4v7tdYI4wp/5gIXr2Vimxebd+ziGwfpaFYmJabpsffAQE6EoDY3maij3AP12g6mwqa9U
      5vr9cRzTa6lfCV6uI4FJ7IZcpvzf8xlhUeAnorsM++GlBCEFluK3IMuSf1K6iZ8HOD85JLYy
      bKxVLxdYGGI4zhvPXkc7L64ahkZzLa5cAMPBgEw5zReffkK2ss5s6uM5As9LsXfS5s5qnu5g
      Qr5YpHVyRGVtg9F4jB2GpFdrTHsD1u/cp5jVJlizOK58302lUwx6bSZ+yKDbJZbgZQuYImTm
      z3Azeer1NbKOxI8kGLCxuU6pWEJGIWEsCIJAZS4azaW5ER6gdXqkXFcfCVwOzaR059W8EQVA
      AiEsiwmUvGqPrng//LLkn5TuT3IoPg59tnf2uH1/i7R7ISWFANNkNuwhnByzUZdydYUfW+nf
      ++rJdcLQaK7MtQogmk4Z+T79doODsU8hZdA6aZK+c48cAbPZgNOjfbY+tnEtSafRIF0oMp6E
      yHDM5r0P8Owkxo5qNPNxzZfPJvcePMCfjpj0B/iGw/276yDAMEyCUYdCbQ0RjGh1enz1/AXt
      TptKdZXW2Qm94URNFhrNFflJPEC7cUa2vELK+e4zWRzHnB2o3w6tTeByaCalu1QmWM8I0zPC
      3okZYd9mPB6T9hyCGFzX/VETvPP086TC0Gh+lGQKQMY8efwFH93f5GQ4RQqbeiXLOAQzHIGT
      plgoAgbplMuCb0Ka95hEDuX2zg6RlsFxo3/RDjH2OTw85KvnL8FyQUTsPX8KtpvE5TWauUnk
      DpBbucU/W79HGPiAwdQPSTkmD6VBynWQIiaOIedZxHGM7TjKY3jVgvTGayaluyyaSenOq6lN
      8II1tQl+B0xw4M8QmKQ890pD3w5ePFMRxh/w9WzKm66ZFMuU/+JiVVIAezsvGQVwp17GcHO0
      zo8YTmPu3t5A+BOmoaBYrjLotqnVVhjPZoTTEbX6LWyTV49KGs1PjzITbNk23U6bnd1d3Eye
      1WqR8WhIIAwM0+D88DkG8NWz52BLtrf3affU9wTVaC6DEg/QbpwS4OIZEYaXJe059LpdSqXS
      6+ZEUtBqtalUa7iey/nJEcVaHc822Xv2xXVD0GiuhDbBC9bUJvgdMMHX5WR/R7nm0uyF+frn
      zxLE+i7uBUqkALaff8l4GrH14QN8P8YmQhgO2WwKEUUMRlOKuTSBMEh7DtOR+taIGs08JFIA
      6VyJQmrGF0+fYplpSoUUtmlwfjxj5vuMZzGlcoEHD7aSuLxGMzeJFIBnScZk+PnDLVoDn9Va
      CQOYTCbkMh6Hpy3q9TVSrn1xJFKjWRA3wgSLBIpgec7EyletvG9+rPpMcEL0WufKNUUiPffV
      a0p5cTDeVGwClyX/pHTn1VRWAF8+/oxapYJTrZM2wUTgD4b4qRSldBrDMBiPJwyGXQxpU62V
      cdyLpliDbkdVGBrNpVBWAIVSkeODfZzxhKOjJusFE9stEhkRzUwe27QwkRimIJ4Nefz7T/nF
      H/+GeiWvKgSN5tIoK4BiuYZjmMSOi2OlyHsSzDSlcg6BwWA4JePaSENCLJCY5DOptwtrNAly
      I0xwMJsq19UzspZDMyndhc8JvgyzyVi55rJ8APSQvHegAGQc8uLFC/LZPIX122S/pdptN8gU
      a3i2yWg0wjWBVO7in6/oNM5UhKHRXBo1B2JmE4q1TXJiwNPPfkcmV2T/4IytzfLFud9Wl9nM
      x59NyXk2VqnGzue/55d/8qesV3IqQtBoroSSAnDTOUbHLyBX4GePPuS8PeLe7XXW6quYxEwm
      UzBdVqpFbMdlEsL9hw8pZPRsAM1iuREmeDJUfzBGiFj56moSmhcrwTKBZ+BlyX+xsSbSFkWj
      WRaSeQs0bvB3Lzv88tFDbEMQRTGuYxEJMGSMaTlEYYCXTgPQOD5IJAyN5m0k1BlOIKTJ6eEe
      hiHY3j5k83adEAdPhBhGRGSkKVUq1GtlUpkkjLDuirAcmknpzqd5IzzAu7bD8DIkdSRyWfJP
      SndezYV7gCQWVpLSfd9jfRfzX3gBGIbBeNClO1CzGixFRL8/JPLHnLe6ajSl4PjwgDCKOD45
      VaIJ0Gs3aHYGDLpNhhN1vZF6vR7BdESz01emeXZ8QKc/4uzkmEioeWgQccjh0Qn+ZEirq+ZN
      oD8Z8uLFC0bjCSdnjbf+/oUXAECz3aPbOkfFtzXwffrDAcdnTSbDLkLBE56IQxzH5umTL3Hi
      Cc2JUBDpBY3zEzr9Kc3zEyV6s1GPZy93OT1vMei1lWhCzOlpAzMeE0QGx6dv/2DNw8HOC2aR
      4LTRpt9tKdF00zlKuTQnp6cYwZCe/+N/VzeiAOLQx4/UfKikELQa50RhxHiqZg6xCGfsH59T
      LuZo94Y4lhrDFgQBQRgSzEbEUo1mu93BnwyZ+T5TP1SiiZCUK0WOTs4Z9LvYtppmxq6XZtI5
      ZzgNmPmREk0DyTSEUsahO5hgv2WP1cJNMEAchQhMHPv6RiiOQvwgxHVdhJC47vX/sqSImc58
      XNcjjiM8T80Kdhj4SMPERIJpY1tqfh7FIsaQkkiA6yh40SclfuBj2y5RdPG9VdHGREpx8Xdl
      W0pjjaXENCAIIjzvx1vw34gC0GgWxY14BNJoFoUuAM17jS4AzXuNLgDNe40uAM17jS4AzXvN
      /wdZ53ZOA4AsIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='United States Cities Data' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
