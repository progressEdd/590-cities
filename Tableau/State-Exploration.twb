<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='result' inline='true' name='federated.0jb60kj0b480uh17nmgml09yjob6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cities' name='textscan.1iuowg319g0l281cm4l3o0zyugnd'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/etang7/Documents/590-cities/Data/cities.csv' dataRefreshTime='' directory='C:/Users/etang7/Documents/590-cities/Data' filename='C:/Users/etang7/AppData/Local/Temp/TableauTemp/1k1z7lq1ik76q619uwsa1135ikaa/cities.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1iuowg319g0l281cm4l3o0zyugnd' name='cities.csv' table='[cities#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:K111:no:A1:K111:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Cost of Living Index' ordinal='3' />
            <column datatype='real' name='Rent Index' ordinal='4' />
            <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='5' />
            <column datatype='real' name='Groceries Index' ordinal='6' />
            <column datatype='real' name='Restaurant Price Index' ordinal='7' />
            <column datatype='real' name='Local Purchasing Power Index' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1iuowg319g0l281cm4l3o0zyugnd' name='cities.csv' table='[cities#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:K111:no:A1:K111:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Rank' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='real' name='Cost of Living Index' ordinal='3' />
            <column datatype='real' name='Rent Index' ordinal='4' />
            <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='5' />
            <column datatype='real' name='Groceries Index' ordinal='6' />
            <column datatype='real' name='Restaurant Price Index' ordinal='7' />
            <column datatype='real' name='Local Purchasing Power Index' ordinal='8' />
            <column datatype='string' name='Country' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K111:no:A1:K111:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>880</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Cost of Living Index</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Rent Index</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Plus Rent Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Plus Rent Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Cost of Living Plus Rent Index</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Groceries Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Groceries Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Groceries Index</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Restaurant Price Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Restaurant Price Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Restaurant Price Index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Purchasing Power Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Purchasing Power Index]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Local Purchasing Power Index</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[cities.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Cost of Living Plus Rent Index]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[Groceries Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Local Purchasing Power Index]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='cities.csv' datatype='table' name='[__tableau_internal_object_id__].[cities.csv_430A602D22F24C35B1704FD5DBBB8A87]' role='measure' type='quantitative' />
      <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cost of Living Plus Rent Index]' derivation='Sum' name='[sum:Cost of Living Plus Rent Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Groceries Index]' derivation='Sum' name='[sum:Groceries Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Local Purchasing Power Index]' derivation='Sum' name='[sum:Local Purchasing Power Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
      <group caption='Interested Cities' name='[City Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[City]' member='&quot;Austin&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Boston&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Chicago&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Dallas&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Houston&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Los Angeles&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[City]' member='&quot;Peoria&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:City Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#dcd4d0'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Plus Rent Index:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Calculation_800514837127700480:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rank:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Local Purchasing Power Index:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Groceries Index:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[__tableau_internal_object_id__].[cnt:result.csv_4D2F7406BCB24DD1B8287691D6A198D1:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cities.csv' id='cities.csv_430A602D22F24C35B1704FD5DBBB8A87'>
            <properties context=''>
              <relation connection='textscan.1iuowg319g0l281cm4l3o0zyugnd' name='cities.csv' table='[cities#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:K111:no:A1:K111:1' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Rank' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='real' name='Cost of Living Index' ordinal='3' />
                  <column datatype='real' name='Rent Index' ordinal='4' />
                  <column datatype='real' name='Cost of Living Plus Rent Index' ordinal='5' />
                  <column datatype='real' name='Groceries Index' ordinal='6' />
                  <column datatype='real' name='Restaurant Price Index' ordinal='7' />
                  <column datatype='real' name='Local Purchasing Power Index' ordinal='8' />
                  <column datatype='string' name='Country' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cost of LIving Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter from='&quot;Albany&quot;' function='range' level='[none:City:nk]' to='&quot;Wichita&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]</cols>
      </table>
      <simple-id uuid='{30D9F66E-B97A-4AA5-815D-83288CD36172}' />
    </worksheet>
    <worksheet name='Interested Cities Comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Groceries Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Local Purchasing Power Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Groceries Index]' derivation='Sum' name='[sum:Groceries Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Local Purchasing Power Index]' derivation='Sum' name='[sum:Local Purchasing Power Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Groceries Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Local Purchasing Power Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[City Set]' />
          <manual-sort column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Boston&quot;</bucket>
              <bucket>&quot;Austin&quot;</bucket>
              <bucket>&quot;Los Angeles&quot;</bucket>
              <bucket>&quot;Chicago&quot;</bucket>
              <bucket>&quot;Houston&quot;</bucket>
              <bucket>&quot;Dallas&quot;</bucket>
              <bucket>&quot;Peoria&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[City Set]</column>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[Multiple Values]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{E15D5B7E-51EB-4061-8F5D-3B6F4BA3C3A3}' />
    </worksheet>
    <worksheet name='Rent Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Rent Index]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rent Index]' derivation='Sum' name='[sum:Rent Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter from='&quot;Albany&quot;' function='range' level='[none:City:nk]' to='&quot;Wichita&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Rent Index:qk]</cols>
      </table>
      <simple-id uuid='{B956DAD7-362B-443E-86A5-B308CFD38449}' />
    </worksheet>
    <worksheet name='Resturant Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Restaurant Price Index]' role='measure' type='quantitative' />
            <column-instance column='[City Set]' derivation='InOut' name='[io:City Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Restaurant Price Index]' derivation='Sum' name='[sum:Restaurant Price Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]</cols>
      </table>
      <simple-id uuid='{B7F4B776-51E4-4E77-B9A3-348255381D20}' />
    </worksheet>
    <worksheet name='United States Cities Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='result' name='federated.0jb60kj0b480uh17nmgml09yjob6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jb60kj0b480uh17nmgml09yjob6'>
            <column caption='City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost of Living Index]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='State' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Living Index]' derivation='Sum' name='[sum:Cost of Living Index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jb60kj0b480uh17nmgml09yjob6].[Longitude (generated)]' field-type='quantitative' max='-6383978.4992957991' min='-19009177.337252311' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jb60kj0b480uh17nmgml09yjob6].[Latitude (generated)]' field-type='quantitative' max='9034276.7959198728' min='2069606.3303346741' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:Country:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:State:nk]' />
              <lod column='[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jb60kj0b480uh17nmgml09yjob6].[Latitude (generated)]</rows>
        <cols>[federated.0jb60kj0b480uh17nmgml09yjob6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6FCFEC06-7D17-4DCA-9928-922305FB4685}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='United States Cities Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Cost of Living Index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:State:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Calculation_800514837127700480:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{3450AA80-037F-401C-86BA-2F99DE46185A}' />
    </window>
    <window class='worksheet' name='Cost of LIving Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F153284D-C202-430D-9BCF-BD0241A97FA4}' />
    </window>
    <window class='worksheet' name='Rent Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F7D7E1B-B795-4FC3-B973-C361C20057D6}' />
    </window>
    <window class='worksheet' name='Resturant Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3019034-FDD7-4FB9-9AB4-F86F90240638}' />
    </window>
    <window class='worksheet' maximized='true' name='Interested Cities Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[:Measure Names]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[City Set]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[io:City Set:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[none:City:nk]</field>
            <field>[federated.0jb60kj0b480uh17nmgml09yjob6].[sum:Restaurant Price Index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92C61F23-1CB0-4A12-87FB-FFF71CE8FB12}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cost of LIving Index' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Interested Cities Comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rent Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Resturant Index' width='192'>
      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
      /wdZ53ZOA4AsIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='United States Cities Data' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
